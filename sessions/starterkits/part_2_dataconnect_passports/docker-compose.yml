version: "3.9"
services:

  # Create DATA CONNECT Database
  # TODO: This container should exist only after the database file and tables are created/ refreshed on host machine
  data-connect-migrate:
    image: ga4gh/ga4gh-starter-kit-utils:0.1.2
    container_name: part_2_dataconnect_migrate
    volumes:
      - "./resources/data-connect/db:/db"
    command: database create-tables -d jdbc:sqlite:/db/data-connect.db data-connect@v0.1.1

  # Add default data to DATA CONNECT Database
  data-connect-dataset:
    depends_on:
      - data-connect-migrate
    image: ga4gh/ga4gh-starter-kit-utils:0.1.2
    container_name: part_2_dataconnect_dataset
    volumes:
      - "./resources/data-connect/db:/db"
      - "./resources/data-connect/db-scripts:/db-scripts"
    entrypoint: ["/bin/sh","-c"]
    command:
    # wait till /db/data-connect.db is available
    # TODO: this should be handled by depends_on, but currently data-connect-migrate container exits before data-connect.db is created
      - |
        while [ ! -f /db/data-connect.db ]; do sleep 1; done
        java -jar ga4gh-starter-kit-utils.jar database add-test-dataset -d jdbc:sqlite:/db/data-connect.db /db-scripts/add-dev-dataset.sql

  # DATA CONNECT
  data-connect:
    depends_on:
      - data-connect-migrate
      - data-connect-dataset
    image: ga4gh/ga4gh-starter-kit-data-connect:0.1.1
    container_name: part_2_dataconnect
    hostname: dataconnect.starterkit.ga4gh.org
    ports:
      - "4800:4500" # public
      - "4801:4501" # admin
    volumes:
      - "./resources/data-connect/config:/config"
      - "./resources/data-connect/db:/db"

  # PASSPORT
  kratos-migrate:
    image: oryd/kratos:v0.9.0-alpha.2
    container_name: part_2_kratos_migrate
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true&mode=rwc
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./contrib/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  passport-ui-node:
    image: ga4gh/ga4gh-starter-kit-passport-ui-node:0.0.2
    container_name: part_2_passport_ui
    environment:
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_ADMIN_URL=http://kratos:4434/
      - PORT=4455
      - SECURITY_MODE=
      - KRATOS_BROWSER_URL=http://127.0.0.1:4433/
      - PASSPORT_BROKER_PUBLIC_URL=http://passport-broker.ga4gh.org:4500/ga4gh/passport/v1/
      - PASSPORT_BROKER_ADMIN_URL=http://passport-broker.ga4gh.org:4501/admin/ga4gh/passport/v1/
    ports:
      - "4455:4455"
    restart: unless-stopped
    networks:
      - intranet
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.9.0-alpha.2
    container_name: part_2_kratos
    ports:
      - '4433:4433' # public
      - '4434:4434' # admin
    restart: unless-stopped
    environment:
      - DSN=sqlite:///var/lib/sqlite/db.sqlite?_fk=true
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: volume
        source: kratos-sqlite
        target: /var/lib/sqlite
        read_only: false
      - type: bind
        source: ./contrib/kratos
        target: /etc/config/kratos
    networks:
      - intranet
  mailslurper:
    image: oryd/mailslurper:latest-smtps
    container_name: part_2_mailslurper
    ports:
      - "4436:4436"
      - "4437:4437"
    networks:
      - intranet
  passport-broker:
    image: ga4gh/ga4gh-starter-kit-passport-broker:0.0.2
    container_name: part_2_passport_broker
    ports:
      - '4500:4500' # public
      - '4501:4501' # admin
    networks:
      - intranet
    hostname: passport-broker.ga4gh.org
    volumes:
      - "./resources/passportBroker/config:/config"
    command: -c /config/config.yml

  # DRS

  # Create DRS Database
  drs-migrate:
    image: ga4gh/ga4gh-starter-kit-utils:0.1.2
    container_name: part_2_drs_migrate
    volumes:
      - "./resources/drs/db:/db"
    command: database create-tables -d jdbc:sqlite:/db/drs.db drs@v0.3.1

  # Add default data to DRS Database
  drs-dataset:
    depends_on:
      - drs-migrate
    image: ga4gh/ga4gh-starter-kit-utils:0.1.2
    container_name: part_2_drs_dataset
    volumes:
      - "./resources/drs/db:/db"
    command: database add-test-dataset -d jdbc:sqlite:/db/drs.db drs@v0.3.1

  # DRS Starter Kit
  drs:
    depends_on:
      - drs-migrate
      - drs-dataset
    image: ga4gh/ga4gh-starter-kit-drs:0.3.1
    container_name: part_2_drs
    hostname: drs.starterkit.federatedgenomics.org
    ports:
      - "5000:5000"
      - "5001:5001"
    volumes:
      - "./resources/drs/config:/config"
      - "./resources/drs/db:/db"
    command: -c /config/config.yml

networks:
  intranet:
volumes:
  kratos-sqlite: